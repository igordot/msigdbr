[{"path":"https://igordot.github.io/msigdbr/articles/msigdbr-intro.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Introduction to msigdbr","text":"Pathway analysis common task genomics research many available R-based software tools. Depending tool, may necessary import pathways, translate genes appropriate species, convert symbols IDs, format resulting object. msigdbr R package provides Molecular Signatures Database (MSigDB) gene sets typically used Gene Set Enrichment Analysis (GSEA) software: R-friendly “tidy” format one gene pair per row multiple frequently studied model organisms, mouse, rat, pig, zebrafish, fly, yeast, addition original human genes gene symbols well NCBI Entrez Ensembl IDs without accessing external resources requiring active internet connection Please aware homologs computationally predicted distinct genes. full pathways may well conserved across species.","code":""},{"path":"https://igordot.github.io/msigdbr/articles/msigdbr-intro.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Introduction to msigdbr","text":"package can installed CRAN.","code":"install.packages(\"msigdbr\")"},{"path":"https://igordot.github.io/msigdbr/articles/msigdbr-intro.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"Introduction to msigdbr","text":"Load package. gene sets database can retrieved specifying species interest. can retrieve data just specific collection/category, hallmark gene sets. can specify sub-category, C2 (curated) CGP (chemical genetic perturbations) gene sets. require custom filtering, msigdbr() function output data frame can manipulated using standard methods. example, can subset specific collection/category using dplyr::filter().","code":"library(msigdbr) #> Error in get(paste0(generic, \".\", class), envir = get_method_env()) :  #>   object 'type_sum.accel' not found all_gene_sets <- msigdbr(species = \"Mus musculus\") head(all_gene_sets) #> # A tibble: 6 × 18 #>   gs_cat gs_subcat     gs_name gene_symbol entrez_gene ensembl_gene human_gene…¹ #>   <chr>  <chr>         <chr>   <chr>             <int> <chr>        <chr>        #> 1 C3     MIR:MIR_Lega… AAACCA… Abcc4            239273 ENSMUSG0000… ABCC4        #> 2 C3     MIR:MIR_Lega… AAACCA… Abraxas2         109359 ENSMUSG0000… ABRAXAS2     #> 3 C3     MIR:MIR_Lega… AAACCA… Actn4             60595 ENSMUSG0000… ACTN4        #> 4 C3     MIR:MIR_Lega… AAACCA… Acvr1             11477 ENSMUSG0000… ACVR1        #> 5 C3     MIR:MIR_Lega… AAACCA… Adam9             11502 ENSMUSG0000… ADAM9        #> 6 C3     MIR:MIR_Lega… AAACCA… Adamts5           23794 ENSMUSG0000… ADAMTS5      #> # ℹ abbreviated name: ¹​human_gene_symbol #> # ℹ 11 more variables: human_entrez_gene <int>, human_ensembl_gene <chr>, #> #   gs_id <chr>, gs_pmid <chr>, gs_geoid <chr>, gs_exact_source <chr>, #> #   gs_url <chr>, gs_description <chr>, taxon_id <int>, ortholog_sources <chr>, #> #   num_ortholog_sources <dbl> h_gene_sets <- msigdbr(species = \"mouse\", category = \"H\") head(h_gene_sets) #> # A tibble: 6 × 18 #>   gs_cat gs_subcat gs_name     gene_symbol entrez_gene ensembl_gene human_gene…¹ #>   <chr>  <chr>     <chr>       <chr>             <int> <chr>        <chr>        #> 1 H      \"\"        HALLMARK_A… Abca1             11303 ENSMUSG0000… ABCA1        #> 2 H      \"\"        HALLMARK_A… Abcb8             74610 ENSMUSG0000… ABCB8        #> 3 H      \"\"        HALLMARK_A… Acaa2             52538 ENSMUSG0000… ACAA2        #> 4 H      \"\"        HALLMARK_A… Acadl             11363 ENSMUSG0000… ACADL        #> 5 H      \"\"        HALLMARK_A… Acadm             11364 ENSMUSG0000… ACADM        #> 6 H      \"\"        HALLMARK_A… Acads             11409 ENSMUSG0000… ACADS        #> # ℹ abbreviated name: ¹​human_gene_symbol #> # ℹ 11 more variables: human_entrez_gene <int>, human_ensembl_gene <chr>, #> #   gs_id <chr>, gs_pmid <chr>, gs_geoid <chr>, gs_exact_source <chr>, #> #   gs_url <chr>, gs_description <chr>, taxon_id <int>, ortholog_sources <chr>, #> #   num_ortholog_sources <dbl> cgp_gene_sets <- msigdbr(species = \"mouse\", category = \"C2\", subcategory = \"CGP\") head(cgp_gene_sets) #> # A tibble: 6 × 18 #>   gs_cat gs_subcat gs_name     gene_symbol entrez_gene ensembl_gene human_gene…¹ #>   <chr>  <chr>     <chr>       <chr>             <int> <chr>        <chr>        #> 1 C2     CGP       ABBUD_LIF_… Ahnak             66395 ENSMUSG0000… AHNAK        #> 2 C2     CGP       ABBUD_LIF_… Alcam             11658 ENSMUSG0000… ALCAM        #> 3 C2     CGP       ABBUD_LIF_… Ankrd40           71452 ENSMUSG0000… ANKRD40      #> 4 C2     CGP       ABBUD_LIF_… Arid1a            93760 ENSMUSG0000… ARID1A       #> 5 C2     CGP       ABBUD_LIF_… Bckdhb            12040 ENSMUSG0000… BCKDHB       #> 6 C2     CGP       ABBUD_LIF_… AU021092         239691 ENSMUSG0000… C16orf89     #> # ℹ abbreviated name: ¹​human_gene_symbol #> # ℹ 11 more variables: human_entrez_gene <int>, human_ensembl_gene <chr>, #> #   gs_id <chr>, gs_pmid <chr>, gs_geoid <chr>, gs_exact_source <chr>, #> #   gs_url <chr>, gs_description <chr>, taxon_id <int>, ortholog_sources <chr>, #> #   num_ortholog_sources <dbl> all_gene_sets %>%   dplyr::filter(gs_cat == \"H\") %>%   head() #> # A tibble: 6 × 18 #>   gs_cat gs_subcat gs_name     gene_symbol entrez_gene ensembl_gene human_gene…¹ #>   <chr>  <chr>     <chr>       <chr>             <int> <chr>        <chr>        #> 1 H      \"\"        HALLMARK_A… Abca1             11303 ENSMUSG0000… ABCA1        #> 2 H      \"\"        HALLMARK_A… Abcb8             74610 ENSMUSG0000… ABCB8        #> 3 H      \"\"        HALLMARK_A… Acaa2             52538 ENSMUSG0000… ACAA2        #> 4 H      \"\"        HALLMARK_A… Acadl             11363 ENSMUSG0000… ACADL        #> 5 H      \"\"        HALLMARK_A… Acadm             11364 ENSMUSG0000… ACADM        #> 6 H      \"\"        HALLMARK_A… Acads             11409 ENSMUSG0000… ACADS        #> # ℹ abbreviated name: ¹​human_gene_symbol #> # ℹ 11 more variables: human_entrez_gene <int>, human_ensembl_gene <chr>, #> #   gs_id <chr>, gs_pmid <chr>, gs_geoid <chr>, gs_exact_source <chr>, #> #   gs_url <chr>, gs_description <chr>, taxon_id <int>, ortholog_sources <chr>, #> #   num_ortholog_sources <dbl>"},{"path":"https://igordot.github.io/msigdbr/articles/msigdbr-intro.html","id":"helper-functions","dir":"Articles","previous_headings":"","what":"Helper functions","title":"Introduction to msigdbr","text":"msigdbr_species() msigdbr_collections() helper functions assist setting msigdbr() parameters. can check available species msigdbr_species(). Either scientific common names acceptable msigdbr() function. can check available collections msigdbr_collections().","code":"msigdbr_species() #> # A tibble: 20 × 2 #>    species_name                    species_common_name                           #>    <chr>                           <chr>                                         #>  1 Anolis carolinensis             Carolina anole, green anole                   #>  2 Bos taurus                      bovine, cattle, cow, dairy cow, domestic cat… #>  3 Caenorhabditis elegans          NA                                            #>  4 Canis lupus familiaris          dog, dogs                                     #>  5 Danio rerio                     leopard danio, zebra danio, zebra fish, zebr… #>  6 Drosophila melanogaster         fruit fly                                     #>  7 Equus caballus                  domestic horse, equine, horse                 #>  8 Felis catus                     cat, cats, domestic cat                       #>  9 Gallus gallus                   bantam, chicken, chickens, Gallus domesticus  #> 10 Homo sapiens                    human                                         #> 11 Macaca mulatta                  rhesus macaque, rhesus macaques, Rhesus monk… #> 12 Monodelphis domestica           gray short-tailed opossum                     #> 13 Mus musculus                    house mouse, mouse                            #> 14 Ornithorhynchus anatinus        duck-billed platypus, duckbill platypus, pla… #> 15 Pan troglodytes                 chimpanzee                                    #> 16 Rattus norvegicus               brown rat, Norway rat, rat, rats              #> 17 Saccharomyces cerevisiae        baker's yeast, brewer's yeast, S. cerevisiae  #> 18 Schizosaccharomyces pombe 972h- NA                                            #> 19 Sus scrofa                      pig, pigs, swine, wild boar                   #> 20 Xenopus tropicalis              tropical clawed frog, western clawed frog msigdbr_collections() #> # A tibble: 23 × 3 #>    gs_cat gs_subcat         num_genesets #>    <chr>  <chr>                    <int> #>  1 C1     \"\"                         299 #>  2 C2     \"CGP\"                     3399 #>  3 C2     \"CP\"                        29 #>  4 C2     \"CP:BIOCARTA\"              292 #>  5 C2     \"CP:KEGG\"                  186 #>  6 C2     \"CP:PID\"                   196 #>  7 C2     \"CP:REACTOME\"             1635 #>  8 C2     \"CP:WIKIPATHWAYS\"          712 #>  9 C3     \"MIR:MIRDB\"               2377 #> 10 C3     \"MIR:MIR_Legacy\"           221 #> 11 C3     \"TFT:GTRD\"                 517 #> 12 C3     \"TFT:TFT_Legacy\"           610 #> 13 C4     \"CGN\"                      427 #> 14 C4     \"CM\"                       431 #> 15 C5     \"GO:BP\"                   7763 #> 16 C5     \"GO:CC\"                   1035 #> 17 C5     \"GO:MF\"                   1763 #> 18 C5     \"HPO\"                     5142 #> 19 C6     \"\"                         189 #> 20 C7     \"IMMUNESIGDB\"             4872 #> 21 C7     \"VAX\"                      347 #> 22 C8     \"\"                         704 #> 23 H      \"\"                          50"},{"path":"https://igordot.github.io/msigdbr/articles/msigdbr-intro.html","id":"pathway-enrichment-analysis","dir":"Articles","previous_headings":"","what":"Pathway enrichment analysis","title":"Introduction to msigdbr","text":"msigdbr output can used various pathway analysis packages. Use gene sets data frame clusterProfiler genes Entrez Gene IDs. Use gene sets data frame clusterProfiler genes gene symbols. Use gene sets data frame fgsea. Use gene sets data frame GSVA.","code":"msigdbr_t2g <- msigdbr_df %>%   dplyr::distinct(gs_name, entrez_gene) %>%   as.data.frame() enricher(gene = gene_ids_vector, TERM2GENE = msigdbr_t2g, ...) msigdbr_t2g <- msigdbr_df %>%   dplyr::distinct(gs_name, gene_symbol) %>%   as.data.frame() enricher(gene = gene_symbols_vector, TERM2GENE = msigdbr_t2g, ...) msigdbr_list <- split(x = msigdbr_df$gene_symbol, f = msigdbr_df$gs_name) fgsea(pathways = msigdbr_list, ...) msigdbr_list <- split(x = msigdbr_df$gene_symbol, f = msigdbr_df$gs_name) gsva(gset.idx.list = msigdbr_list, ...)"},{"path":"https://igordot.github.io/msigdbr/articles/msigdbr-intro.html","id":"potential-questions-or-concerns","dir":"Articles","previous_headings":"","what":"Potential questions or concerns","title":"Introduction to msigdbr","text":"version MSigDB used? package generated MSigDB v2022.1. MSigDB version used base msigdbr CRAN package version. can check installed version packageVersion(\"msigdbr\"). Can download gene sets directly MSigDB instead using package? Yes. can import GMT files (getGmt() GSEABase package, example). GMTs include human genes, even gene sets generated mouse experiments. working non-human data, convert MSigDB genes organism genes human. Can convert human mouse genes just adjusting gene capitalization? work genes, . Can convert human genes organism instead using package? Yes. popular method using biomaRt package. may still end dozens homologs genes, additional cleanup may helpful. Aren’t already similar tools? resources provide msigdbr functionality served inspiration package. WEHI provides MSigDB gene sets R format human mouse. MSigDF relies WEHI resource, converted tidyverse-friendly data frame. recent ToledoEM/msigdf fork. updated varying frequencies may based latest version MSigDB. Since 2022, GSEA/MSigDB team provides collections natively mouse don’t require orthology conversion. questions? can submit feedback report bugs GitHub.","code":""},{"path":"https://igordot.github.io/msigdbr/articles/msigdbr-intro.html","id":"details","dir":"Articles","previous_headings":"","what":"Details","title":"Introduction to msigdbr","text":"Molecular Signatures Database (MSigDB) collection gene sets originally created use Gene Set Enrichment Analysis (GSEA) software. cite use underlying MSigDB data, reference Subramanian, Tamayo, et al. (2005, PNAS) one following appropriate: Liberzon, et al. (2011, Bioinformatics), Liberzon, et al. (2015, Cell Systems), also source gene set. Gene homologs provided HUGO Gene Nomenclature Committee European Bioinformatics Institute integrates orthology assertions predicted human genes eggNOG, Ensembl Compara, HGNC, HomoloGene, Inparanoid, NCBI Gene Orthology, OMA, OrthoDB, OrthoMCL, Panther, PhylomeDB, TreeFam ZFIN. human equivalent within species, ortholog supported largest number databases used. information cite cite R package msigdbr, can execute citation(\"msigdbr\").","code":""},{"path":"https://igordot.github.io/msigdbr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Igor Dolgalev. Author, maintainer.","code":""},{"path":"https://igordot.github.io/msigdbr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Dolgalev (2024). msigdbr: MSigDB Gene Sets Multiple Organisms Tidy Data Format. R package version 2022.1.1, https://igordot.github.io/msigdbr/.","code":"@Manual{,   title = {msigdbr: MSigDB Gene Sets for Multiple Organisms in a Tidy Data Format},   author = {Igor Dolgalev},   year = {2024},   note = {R package version 2022.1.1},   url = {https://igordot.github.io/msigdbr/}, }"},{"path":[]},{"path":"https://igordot.github.io/msigdbr/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"MSigDB gene sets R package","text":"msigdbr R package provides Molecular Signatures Database (MSigDB) gene sets typically used Gene Set Enrichment Analysis (GSEA) software: R-friendly “tidy” format one gene pair per row multiple frequently studied model organisms, mouse, rat, pig, zebrafish, fly, yeast, addition original human genes gene symbols well NCBI Entrez Ensembl IDs without accessing external resources requiring active internet connection","code":""},{"path":"https://igordot.github.io/msigdbr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"MSigDB gene sets R package","text":"package can installed CRAN. {r} install.packages(\"msigdbr\") Releases available CRAN can installed GitHub (specific release version can specified): {r} remotes::install_github(\"igordot/msigdbr\", ref = \"v2022.1.1\")","code":""},{"path":"https://igordot.github.io/msigdbr/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"MSigDB gene sets R package","text":"package data can accessed using msigdbr() function, returns data frame gene sets member genes. example, can retrieve mouse genes C2 (curated) CGP (chemical genetic perturbations) gene sets. {r} library(msigdbr) genesets = msigdbr(species = \"mouse\", category = \"C2\", subcategory = \"CGP\") Check documentation website information.","code":""},{"path":"https://igordot.github.io/msigdbr/reference/msigdbr.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the gene sets data frame — msigdbr","title":"Retrieve the gene sets data frame — msigdbr","text":"Retrieve data frame gene sets member genes. available species collections can checked msigdbr_species() msigdbr_collections().","code":""},{"path":"https://igordot.github.io/msigdbr/reference/msigdbr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the gene sets data frame — msigdbr","text":"","code":"msigdbr(species = \"Homo sapiens\", category = NULL, subcategory = NULL)"},{"path":"https://igordot.github.io/msigdbr/reference/msigdbr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the gene sets data frame — msigdbr","text":"species Species name, Homo sapiens Mus musculus. category MSigDB collection abbreviation, H C1. subcategory MSigDB sub-collection abbreviation, CGP BP.","code":""},{"path":"https://igordot.github.io/msigdbr/reference/msigdbr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the gene sets data frame — msigdbr","text":"data frame gene sets one gene per row.","code":""},{"path":"https://igordot.github.io/msigdbr/reference/msigdbr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Retrieve the gene sets data frame — msigdbr","text":"https://www.gsea-msigdb.org/gsea/msigdb/collections.jsp","code":""},{"path":"https://igordot.github.io/msigdbr/reference/msigdbr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve the gene sets data frame — msigdbr","text":"","code":"# get all human gene sets # \\donttest{ msigdbr(species = \"Homo sapiens\") #> # A tibble: 3,995,746 × 15 #>    gs_cat gs_subcat      gs_name        gene_symbol entrez_gene ensembl_gene    #>    <chr>  <chr>          <chr>          <chr>             <int> <chr>           #>  1 C3     MIR:MIR_Legacy AAACCAC_MIR140 ABCC4             10257 ENSG00000125257 #>  2 C3     MIR:MIR_Legacy AAACCAC_MIR140 ABRAXAS2          23172 ENSG00000165660 #>  3 C3     MIR:MIR_Legacy AAACCAC_MIR140 ACTN4                81 ENSG00000130402 #>  4 C3     MIR:MIR_Legacy AAACCAC_MIR140 ACVR1                90 ENSG00000115170 #>  5 C3     MIR:MIR_Legacy AAACCAC_MIR140 ADAM9              8754 ENSG00000168615 #>  6 C3     MIR:MIR_Legacy AAACCAC_MIR140 ADAMTS5           11096 ENSG00000154736 #>  7 C3     MIR:MIR_Legacy AAACCAC_MIR140 AMER2            219287 ENSG00000165566 #>  8 C3     MIR:MIR_Legacy AAACCAC_MIR140 ANK2                287 ENSG00000145362 #>  9 C3     MIR:MIR_Legacy AAACCAC_MIR140 API5               8539 ENSG00000166181 #> 10 C3     MIR:MIR_Legacy AAACCAC_MIR140 BACH1               571 ENSG00000156273 #> # ℹ 3,995,736 more rows #> # ℹ 9 more variables: human_gene_symbol <chr>, human_entrez_gene <int>, #> #   human_ensembl_gene <chr>, gs_id <chr>, gs_pmid <chr>, gs_geoid <chr>, #> #   gs_exact_source <chr>, gs_url <chr>, gs_description <chr> # }  # get mouse C2 (curated) CGP (chemical and genetic perturbations) gene sets # \\donttest{ msigdbr(species = \"Mus musculus\", category = \"C2\", subcategory = \"CGP\") #> # A tibble: 378,755 × 18 #>    gs_cat gs_subcat gs_name                 gene_symbol entrez_gene ensembl_gene #>    <chr>  <chr>     <chr>                   <chr>             <int> <chr>        #>  1 C2     CGP       ABBUD_LIF_SIGNALING_1_… Ahnak             66395 ENSMUSG0000… #>  2 C2     CGP       ABBUD_LIF_SIGNALING_1_… Alcam             11658 ENSMUSG0000… #>  3 C2     CGP       ABBUD_LIF_SIGNALING_1_… Ankrd40           71452 ENSMUSG0000… #>  4 C2     CGP       ABBUD_LIF_SIGNALING_1_… Arid1a            93760 ENSMUSG0000… #>  5 C2     CGP       ABBUD_LIF_SIGNALING_1_… Bckdhb            12040 ENSMUSG0000… #>  6 C2     CGP       ABBUD_LIF_SIGNALING_1_… AU021092         239691 ENSMUSG0000… #>  7 C2     CGP       ABBUD_LIF_SIGNALING_1_… Capn9             73647 ENSMUSG0000… #>  8 C2     CGP       ABBUD_LIF_SIGNALING_1_… Cd24a             12484 ENSMUSG0000… #>  9 C2     CGP       ABBUD_LIF_SIGNALING_1_… Cyfip1            20430 ENSMUSG0000… #> 10 C2     CGP       ABBUD_LIF_SIGNALING_1_… Dcaf11            28199 ENSMUSG0000… #> # ℹ 378,745 more rows #> # ℹ 12 more variables: human_gene_symbol <chr>, human_entrez_gene <int>, #> #   human_ensembl_gene <chr>, gs_id <chr>, gs_pmid <chr>, gs_geoid <chr>, #> #   gs_exact_source <chr>, gs_url <chr>, gs_description <chr>, taxon_id <int>, #> #   ortholog_sources <chr>, num_ortholog_sources <dbl> # }"},{"path":"https://igordot.github.io/msigdbr/reference/msigdbr_collections.html","id":null,"dir":"Reference","previous_headings":"","what":"List the collections available in the msigdbr package — msigdbr_collections","title":"List the collections available in the msigdbr package — msigdbr_collections","text":"List collections available msigdbr package","code":""},{"path":"https://igordot.github.io/msigdbr/reference/msigdbr_collections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List the collections available in the msigdbr package — msigdbr_collections","text":"","code":"msigdbr_collections()"},{"path":"https://igordot.github.io/msigdbr/reference/msigdbr_collections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List the collections available in the msigdbr package — msigdbr_collections","text":"data frame available collections.","code":""},{"path":"https://igordot.github.io/msigdbr/reference/msigdbr_collections.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List the collections available in the msigdbr package — msigdbr_collections","text":"","code":"msigdbr_collections() #> # A tibble: 23 × 3 #>    gs_cat gs_subcat         num_genesets #>    <chr>  <chr>                    <int> #>  1 C1     \"\"                         299 #>  2 C2     \"CGP\"                     3399 #>  3 C2     \"CP\"                        29 #>  4 C2     \"CP:BIOCARTA\"              292 #>  5 C2     \"CP:KEGG\"                  186 #>  6 C2     \"CP:PID\"                   196 #>  7 C2     \"CP:REACTOME\"             1635 #>  8 C2     \"CP:WIKIPATHWAYS\"          712 #>  9 C3     \"MIR:MIRDB\"               2377 #> 10 C3     \"MIR:MIR_Legacy\"           221 #> # ℹ 13 more rows"},{"path":"https://igordot.github.io/msigdbr/reference/msigdbr_show_species.html","id":null,"dir":"Reference","previous_headings":"","what":"List the species available in the msigdbr package — msigdbr_show_species","title":"List the species available in the msigdbr package — msigdbr_show_species","text":"function deprecated replaced msigdbr_species().","code":""},{"path":"https://igordot.github.io/msigdbr/reference/msigdbr_show_species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List the species available in the msigdbr package — msigdbr_show_species","text":"","code":"msigdbr_show_species()"},{"path":"https://igordot.github.io/msigdbr/reference/msigdbr_show_species.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List the species available in the msigdbr package — msigdbr_show_species","text":"vector possible species.","code":""},{"path":"https://igordot.github.io/msigdbr/reference/msigdbr_species.html","id":null,"dir":"Reference","previous_headings":"","what":"List the species available in the msigdbr package — msigdbr_species","title":"List the species available in the msigdbr package — msigdbr_species","text":"List species available msigdbr package","code":""},{"path":"https://igordot.github.io/msigdbr/reference/msigdbr_species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List the species available in the msigdbr package — msigdbr_species","text":"","code":"msigdbr_species()"},{"path":"https://igordot.github.io/msigdbr/reference/msigdbr_species.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List the species available in the msigdbr package — msigdbr_species","text":"data frame available species.","code":""},{"path":"https://igordot.github.io/msigdbr/reference/msigdbr_species.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List the species available in the msigdbr package — msigdbr_species","text":"","code":"msigdbr_species() #> # A tibble: 20 × 2 #>    species_name                    species_common_name                           #>    <chr>                           <chr>                                         #>  1 Anolis carolinensis             Carolina anole, green anole                   #>  2 Bos taurus                      bovine, cattle, cow, dairy cow, domestic cat… #>  3 Caenorhabditis elegans          NA                                            #>  4 Canis lupus familiaris          dog, dogs                                     #>  5 Danio rerio                     leopard danio, zebra danio, zebra fish, zebr… #>  6 Drosophila melanogaster         fruit fly                                     #>  7 Equus caballus                  domestic horse, equine, horse                 #>  8 Felis catus                     cat, cats, domestic cat                       #>  9 Gallus gallus                   bantam, chicken, chickens, Gallus domesticus  #> 10 Homo sapiens                    human                                         #> 11 Macaca mulatta                  rhesus macaque, rhesus macaques, Rhesus monk… #> 12 Monodelphis domestica           gray short-tailed opossum                     #> 13 Mus musculus                    house mouse, mouse                            #> 14 Ornithorhynchus anatinus        duck-billed platypus, duckbill platypus, pla… #> 15 Pan troglodytes                 chimpanzee                                    #> 16 Rattus norvegicus               brown rat, Norway rat, rat, rats              #> 17 Saccharomyces cerevisiae        baker's yeast, brewer's yeast, S. cerevisiae  #> 18 Schizosaccharomyces pombe 972h- NA                                            #> 19 Sus scrofa                      pig, pigs, swine, wild boar                   #> 20 Xenopus tropicalis              tropical clawed frog, western clawed frog"},{"path":"https://igordot.github.io/msigdbr/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://igordot.github.io/msigdbr/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://igordot.github.io/msigdbr/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://igordot.github.io/msigdbr/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://igordot.github.io/msigdbr/reference/tidyeval.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy eval helpers — tidyeval","title":"Tidy eval helpers — tidyeval","text":"page lists tidy eval tools reexported package rlang. learn using tidy eval scripts packages high level, see dplyr programming vignette ggplot2 packages vignette. Metaprogramming section Advanced R may also useful deeper dive. tidy eval operators {{, !!, !!! syntactic constructs specially interpreted tidy eval functions. mostly need {{, !! !!! advanced operators use simple cases. curly-curly operator {{ allows tunnel data-variables passed function arguments inside tidy eval functions. {{ designed individual arguments. pass multiple arguments contained dots, use ... normal way.   enquo() enquos() delay execution one several function arguments. former returns single expression, latter returns list expressions. defused, expressions longer evaluate . must injected back evaluation context !! (single expression) !!! (list expressions).   simple case, code equivalent usage {{ ... . Defusing enquo() enquos() needed complex cases, instance need inspect modify expressions way. .data pronoun object represents current slice data. variable name string, use .data pronoun subset variable [[.   Another tidy eval operator :=. makes possible use glue curly-curly syntax LHS =. technical reasons, R language support complex expressions left =, use := workaround.   Many tidy eval functions like dplyr::mutate() dplyr::summarise() give automatic name unnamed inputs. need create sort automatic names , use as_label(). instance, glue-tunnelling syntax can reproduced manually :   Expressions defused enquo() (tunnelled {{) need simple column names, can arbitrarily complex. as_label() handles cases gracefully. code assumes simple column name, use as_name() instead. safer throws error input name expected.","code":"my_function <- function(data, var, ...) {   data %>%     group_by(...) %>%     summarise(mean = mean({{ var }})) } my_function <- function(data, var, ...) {   # Defuse   var <- enquo(var)   dots <- enquos(...)    # Inject   data %>%     group_by(!!!dots) %>%     summarise(mean = mean(!!var)) } my_var <- \"disp\" mtcars %>% summarise(mean = mean(.data[[my_var]])) my_function <- function(data, var, suffix = \"foo\") {   # Use `{{` to tunnel function arguments and the usual glue   # operator `{` to interpolate plain strings.   data %>%     summarise(\"{{ var }}_mean_{suffix}\" := mean({{ var }})) } my_function <- function(data, var, suffix = \"foo\") {   var <- enquo(var)   prefix <- as_label(var)   data %>%     summarise(\"{prefix}_mean_{suffix}\" := mean(!!var)) }"},{"path":"https://igordot.github.io/msigdbr/news/index.html","id":"msigdbr-202211","dir":"Changelog","previous_headings":"","what":"msigdbr 2022.1.1","title":"msigdbr 2022.1.1","text":"Based MSigDB v2022.1 release. CRAN.","code":""},{"path":"https://igordot.github.io/msigdbr/news/index.html","id":"msigdbr-751","dir":"Changelog","previous_headings":"","what":"msigdbr 7.5.1","title":"msigdbr 7.5.1","text":"CRAN release: 2022-03-30 Based MSigDB v7.5.1 release.","code":""},{"path":"https://igordot.github.io/msigdbr/news/index.html","id":"msigdbr-741","dir":"Changelog","previous_headings":"","what":"msigdbr 7.4.1","title":"msigdbr 7.4.1","text":"CRAN release: 2021-05-05 Based MSigDB v7.4 release. Added Ensembl gene IDs returned gene sets.","code":""},{"path":"https://igordot.github.io/msigdbr/news/index.html","id":"msigdbr-721","dir":"Changelog","previous_headings":"","what":"msigdbr 7.2.1","title":"msigdbr 7.2.1","text":"CRAN release: 2020-10-02 Based MSigDB v7.2 release. Added annotation fields returned gene sets. Added msigdbr_species() alternative msigdbr_show_species(). Added msigdbr_collections().","code":""},{"path":"https://igordot.github.io/msigdbr/news/index.html","id":"msigdbr-711","dir":"Changelog","previous_headings":"","what":"msigdbr 7.1.1","title":"msigdbr 7.1.1","text":"CRAN release: 2020-05-14 Based MSigDB v7.1 release. Increased ortholog prediction stringency.","code":""},{"path":"https://igordot.github.io/msigdbr/news/index.html","id":"msigdbr-701","dir":"Changelog","previous_headings":"","what":"msigdbr 7.0.1","title":"msigdbr 7.0.1","text":"CRAN release: 2019-09-04 Based MSigDB v7.0 release. Fixed output selecting multiple collections.","code":""},{"path":"https://igordot.github.io/msigdbr/news/index.html","id":"msigdbr-621","dir":"Changelog","previous_headings":"","what":"msigdbr 6.2.1","title":"msigdbr 6.2.1","text":"CRAN release: 2018-10-09 Based MSigDB v6.2 release.","code":""},{"path":"https://igordot.github.io/msigdbr/news/index.html","id":"msigdbr-611","dir":"Changelog","previous_headings":"","what":"msigdbr 6.1.1","title":"msigdbr 6.1.1","text":"CRAN release: 2018-04-12 Based MSigDB v6.1 release. Initial CRAN submission.","code":""}]
